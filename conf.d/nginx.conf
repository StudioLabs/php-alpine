worker_processes     2;
error_log stderr warn;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {

    # server {
    #     listen [::]:8080 default_server;
    #     listen 8080 default_se    rver;
    #     location / {
    #     return 301 https://$host$request_uri;
    #     }
    # }

    keepalive_requests 100000;


    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=microcache:10m max_size=1000m inactive=60m;
    fastcgi_buffer_size 128k;
    fastcgi_buffers 256 16k;
    fastcgi_busy_buffers_size 256k;
    fastcgi_temp_file_write_size 256k;
    fastcgi_read_timeout 240;


    server {
        listen [::]:80 default_server;
        listen 80 default_server;
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        # ssl_certificate       /app/ssl/cert.pem;
        # ssl_certificate_key   /app/ssl/key.pem;
        # ssl_session_timeout   5m;
        # ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;

#  ssl_session_cache    shared:SSL:10m;
#         ssl_session_timeout  10m;
#         ssl_ciphers  HIGH:!aNULL:!MD5;
#         ssl_prefer_server_ciphers on;
#         server_name _;

         ##
        # File Cache Settings
        ##

        open_file_cache          max=5000  inactive=20s;
        open_file_cache_valid    30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors   on;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 2;
        types_hash_max_size 2048;
        server_tokens off;

        gzip on;
        gzip_static on;
        gzip_disable "msie6";
        gzip_http_version 1.1;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js;
        gzip_buffers 16 8k;

        root /var/www/html/public;
        index index.php index.html;

            # Disable caching for root files
    location ~* \.(?:manifest|appcache|html?|xml|json)$ {
      expires -1;
    }

    # Cache for a long period
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|eot|ttf|woff|svg|otf|svgz|mp4|ogg|ogv|webm|htc|css|js|map)$ {
      expires 1y;
      add_header Cache-Control "public";
      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Allow-Headers X-Requested-With;
      add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
    }


        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to index.php
        	try_files $uri $uri/ /index.php$is_args$args;
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/lib/nginx/html;
        }



        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            # fastcgi_split_path_info ^(.+\.php)(/.+)$;
            #
            # Setup var defaults
            set $no_cache "";
            # If non GET/HEAD, don't cache & mark user as uncacheable for 1 second via cookie
            if ($request_method !~ ^(GET|HEAD)$) {
                set $no_cache "1";
            }

            if ($request_method = POST) {
                set $no_cache '';
            }

            # Don't cache uris containing the following segments
            if ($request_uri ~ /.*nocache.*) {
                set $no_cache '';
            }

            ; if ($query_string != "") {
            ;     set $no_cache '';
            ; }
            # # Drop no cache cookie if need be
            # # (for some reason, add_header fails if included in prior if-block)
            # if ($no_cache = "1") {
            #     add_header Set-Cookie "_mcnc=1; Max-Age=2; Path=/";
            #     add_header X-Microcachable "0";
            # }
            # # Bypass cache if no-cache cookie is set
            # if ($http_cookie ~* "_mcnc") {
            #             set $no_cache "1";
            # }
            # Bypass cache if flag is set
            fastcgi_no_cache $no_cache;
            fastcgi_cache_bypass $no_cache;
            fastcgi_cache microcache;
            fastcgi_cache_key $scheme$host$request_uri$request_method;
            fastcgi_cache_valid 200 301 302 10m;
            fastcgi_cache_use_stale updating error timeout invalid_header http_500;
            fastcgi_pass_header Set-Cookie;
            fastcgi_pass_header Cookie;
            fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

            try_files $uri =404;

            include fastcgi_params;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_index index.php;
            # fastcgi_pass  127.0.0.1:9000;
            fastcgi_pass  unix:/var/run/php-fpm.sock;
            fastcgi_intercept_errors on;
           
        }

        # deny access to . files, for security
        #
        location ~ /\. {
            log_not_found off;
            deny all;
        }

        # allow fpm ping and status from localhost
        #
        location ~ ^/(status|ping)$ {
            access_log off;
            # allow 127.0.0.1;
            # deny all;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            #fastcgi_pass unix:/var/run/php-fpm.sock;
            fastcgi_pass  unix:/var/run/php-fpm.sock;
        }
    }
}