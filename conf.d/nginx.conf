worker_processes     2;
error_log stderr warn;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {

    # server {
    #     listen [::]:8080 default_server;
    #     listen 8080 default_se    rver;
    #     location / {
    #     return 301 https://$host$request_uri;
    #     }
    # }

   
    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    keepalive_timeout  65;

    server {
        listen [::]:8080 default_server;
        listen 8080 default_server;
        listen 9090 ssl http2 default_server;
        listen [::]:9090 ssl http2 default_server;
        # ssl_certificate       /app/ssl/cert.pem;
        # ssl_certificate_key   /app/ssl/key.pem;
        # ssl_session_timeout   5m;
        # ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;

        server_name _;

        sendfile off;
        server_tokens off;

        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
        gzip_disable "MSIE [1-6]\.";

        root /var/www/html/public;
        index index.php index.html;

            # Disable caching for root files
    location ~* \.(?:manifest|appcache|html?|xml|json)$ {
      expires -1;
    }

    # Cache for a long period
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|eot|ttf|woff|svg|otf|svgz|mp4|ogg|ogv|webm|htc|css|js|map)$ {
      expires 1y;
      add_header Cache-Control "public";
      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Allow-Headers X-Requested-With;
      add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
    }


        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to index.php
            try_files $uri $uri/ /index.php?q=$uri&$args;
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/lib/nginx/html;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            # fastcgi_pass  127.0.0.1:9000;
            fastcgi_pass /var/run/php-fpm.sock;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_index index.php;
            include fastcgi_params;
        }

        location /status {
            access_log off;
            include fastcgi_params;
            fastcgi_pass /var/run/php-fpm.sock;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        location /ping {
            access_log off;
            include fastcgi_params;
            fastcgi_pass /var/run/php-fpm.sock;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

    
        # deny access to . files, for security
        #
        location ~ /\. {
            log_not_found off;
            deny all;
        }

        # allow fpm ping and status from localhost
        #
        location ~ ^/(fpm-status|fpm-ping)$ {
            access_log off;
            allow 127.0.0.1;
            deny all;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_pass   unix:/var/run/php-fpm.sock;
            #fastcgi_pass 127.0.0.1:9000;
        }
    }
}